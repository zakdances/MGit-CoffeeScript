// Generated by CoffeeScript 1.6.3
(function() {
  var Commit, MGITRepository, UUID, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  MGITRepository = (function() {
    function MGITRepository(commits, capacity) {
      this.commits = commits != null ? commits : [];
      this.capacity = capacity != null ? capacity : 100;
    }

    MGITRepository.prototype.stageAndCommit = function(change) {
      if (this.commits.length >= this.capacity) {
        this.commits.shift();
      }
      return this.commits.push(change);
    };

    return MGITRepository;

  })();

  UUID = (function() {
    function UUID(UUIDString) {
      this.UUIDString = UUIDString != null ? UUIDString : UUID._generateUUIDString();
    }

    UUID._generateUUIDString = function() {
      return uuid.v1();
    };

    return UUID;

  })();

  Commit = (function() {
    function Commit(id) {
      this.id = id != null ? id : new UUID();
      this.synced = false;
    }

    Commit.fromJSON = function(data) {};

    Commit.prototype.toJSON = function() {};

    return Commit;

  })();

}).call(this);
